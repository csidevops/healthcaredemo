/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 22 10:04:19 GMT 2021
 */

package com.neu.Rohit.pojo;

import org.junit.Test;
import static org.junit.Assert.*;
import com.neu.Rohit.pojo.BookingDetails;
import com.neu.Rohit.pojo.Car;
import java.util.Date;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.junit.runner.RunWith;

public class BookingDetails_ESTest {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BookingDetails bookingDetails0 = new BookingDetails("", "", "]Lu18O'2v3$ hr", mockDate0, "", mockDate0, "H");
      String string0 = bookingDetails0.getSourceLocation();
      assertEquals("", string0);
      assertEquals("H", bookingDetails0.getExpiryTime());
      assertEquals("]Lu18O'2v3$ hr", bookingDetails0.getDestination());
      assertEquals("", bookingDetails0.getBookingTime());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BookingDetails bookingDetails0 = new BookingDetails((String) null, (String) null, (String) null, mockDate0, (String) null, mockDate0, (String) null);
      Date date0 = bookingDetails0.getExpiryDate();
      assertSame(mockDate0, date0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BookingDetails bookingDetails0 = new BookingDetails("trb", "vj4tR4s^Ph %HN%Q<uU", "-_H", mockDate0, (String) null, mockDate0, "trb");
      String string0 = bookingDetails0.getDestination();
      assertEquals("vj4tR4s^Ph %HN%Q<uU", bookingDetails0.getSourceLocation());
      assertEquals("trb", bookingDetails0.getExpiryTime());
      assertNotNull(string0);
      assertEquals("-_H", string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BookingDetails bookingDetails0 = new BookingDetails("", "", "", mockDate0, "", mockDate0, "{#PgNN");
      Car car0 = new Car();
      car0.setRegistrationNo((-3496L));
      bookingDetails0.setCar(car0);
      bookingDetails0.getCar();
      assertEquals("{#PgNN", bookingDetails0.getExpiryTime());
      assertEquals("", bookingDetails0.getDestination());
      assertEquals("", bookingDetails0.getSourceLocation());
      assertEquals("", bookingDetails0.getBookingTime());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      MockDate mockDate0 = new MockDate((-416), (-172), (-172), 0, (-416));
      BookingDetails bookingDetails0 = new BookingDetails("", "", "", mockDate0, "]^Zp", mockDate0, "]^Zp");
      String string0 = bookingDetails0.getBookingTime();
      assertEquals("", bookingDetails0.getDestination());
      assertEquals("", bookingDetails0.getSourceLocation());
      assertEquals("]^Zp", bookingDetails0.getExpiryTime());
      assertEquals("]^Zp", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BookingDetails bookingDetails0 = new BookingDetails("", "", "]Lu18O'2v3$ hr", mockDate0, "", mockDate0, "H");
      String string0 = bookingDetails0.getBookingTime();
      assertEquals("]Lu18O'2v3$ hr", bookingDetails0.getDestination());
      assertEquals("H", bookingDetails0.getExpiryTime());
      assertEquals("", bookingDetails0.getSourceLocation());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BookingDetails bookingDetails0 = new BookingDetails("trb", "vj4tR4s^Ph %HN%Q<uU", "-_H", mockDate0, (String) null, mockDate0, "trb");
      bookingDetails0.setBookingID((-1485L));
      long long0 = bookingDetails0.getBookingID();
      assertEquals((-1485L), long0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BookingDetails bookingDetails0 = new BookingDetails("trb", "vj4tR4s^Ph %HN%Q<uU", "-_H", mockDate0, (String) null, mockDate0, "trb");
      bookingDetails0.getBookingDate();
      assertEquals("-_H", bookingDetails0.getDestination());
      assertEquals("vj4tR4s^Ph %HN%Q<uU", bookingDetails0.getSourceLocation());
      assertEquals("trb", bookingDetails0.getExpiryTime());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      MockDate mockDate0 = new MockDate();
      BookingDetails bookingDetails0 = new BookingDetails((String) null, (String) null, (String) null, mockDate0, (String) null, mockDate0, (String) null);
      bookingDetails0.setBookingDate(mockDate0);
      assertNull(bookingDetails0.getDestination());
  }
}
